services:
  postgres:
    image: postgres:16-alpine
    container_name: pg-lbtig
    environment:
      POSTGRES_USER: kj
      POSTGRES_PASSWORD: 314314
      POSTGRES_DB: rss_podcast
    ports:
      - "5432:5432"              # 若被占用可改为 "5433:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kj -d rss_podcast"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  valkey:
    image: valkey/valkey:7.2-alpine
    container_name: valkey-podcast
    ports:
      - "6379:6379"
    volumes:
      - valkey-data:/data
    command: valkey-server --appendonly yes
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: backend
    env_file:
      - ./backend/.env           # 只需要 DATABASE_URL
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_healthy
    volumes:
      - ./backend/podcasts:/app/podcasts
      - ./backend/static:/app/static
    expose:
      - "8000"
    restart: unless-stopped

  worker:
    build:
      context: ./backend
    container_name: worker
    env_file:
      - ./backend/.env           # 共享同一份 DATABASE_URL
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_healthy
    command: >
      bash -lc "celery -A app.celery_app.celery_app worker -l info"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "8080:80"                  # 若被占用可改为 "8080:80"
    restart: unless-stopped

volumes:
  pg-data:
  valkey-data: